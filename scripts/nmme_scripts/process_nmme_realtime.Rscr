#!/opt/R-3.2.3/bin//Rscript

# ================================================
# Step 1 - 
# merge nmme data and create usable files
# S. Baker, July 2017
# ================================================
rm(list=ls())

## Load libraries
library(ncdf4)
library(dplyr)
#library(plyr)
library(lubridate)
library(reshape2) # melt()
#library(zoo)
options(stringsAsFactors=FALSE)

## Directories
dir_in = '/d2/hydrofcst/s2s/nmme_processing/HUC_fcst/'
dir_clim = '/home/hydrofcst/s2s/scripts/nmme_scripts/'
dir_out = '/d2/hydrofcst/s2s/Rshiny_input/'

## Input data
setwd(dir_in)
files = list.files()
file.names = matrix(unlist(strsplit(files, "[.]")), nrow = length(files), byrow = T)

### Read and save data (takes ~x minutes)
#beg_time = Sys.time()
df_model = NULL
for (i in 1:nrow(file.names)) {
  # read netcdf
  nc_temp = nc_open(files[[i]]) 
  
  ## read variables & combine
  var_raw = ncvar_get(nc_temp, file.names[i,1]) # [hru (x), timestep (y)]
  hru_vec = ncvar_get(nc_temp, 'hru') # ncvar_get works on dimensions as well as variables
  fcst_date =  as.Date(paste0(substr(file.names[i,2],1,4),'-',substr(file.names[i,2],5,6),'-01'), format = '%Y-%m-%d')
  # fcst_date =  ymd(paste0(substr(file.names[i,2],1,4),'-',substr(file.names[i,2],5,6),'-01')) %m+% months(1)
  
  if (file.names[i,1] == 'prate') { # to mm/d
    var_raw = var_raw * 86400
  }
  if (file.names[i,1] == 'tmp2m') { # to Celcius
    var_raw = var_raw - 273.15
  }
  
  df = cbind.data.frame(file.names[i,1], file.names[i,3], fcst_date, hru_vec, var_raw)
  
  ## merge with previous data
  df_model = plyr::rbind.fill(df_model, df)
  
}
colnames(df_model) <- c('var', 'mdl', 'fcst_date', 'hru', '1', '2', '3', '4', '5', '6', '7','8') #inital timestep offset by 1 month


# ================================================
# Step 2 - 
# Calc anomalies based on NMME climatology
# S. Baker, August 2017
# ================================================

### === load and organize climatologies
setwd(dir_clim)
clim_tmp2m = readRDS('nmme_tmp2m_climatology.rds')
clim_prate = readRDS('nmme_prate_climatology.rds')

## combine climatology variables
clim = rbind.data.frame(cbind.data.frame(var = 'tmp2m', clim_tmp2m),
                        cbind.data.frame(var = 'prate', clim_prate))
clim$lead <- NULL

### === load and organize real-time data
realtime = df_model

## organize realtime data - melt df & change column type 
nmme_real = melt(realtime, id.vars = c('var','mdl', 'fcst_date', 'hru'), variable.name = 'lead')
nmme_real$var = as.character(nmme_real$var)
nmme_real$mdl = as.character(nmme_real$mdl)
nmme_real$hru = as.numeric(nmme_real$hru)
nmme_real$lead = as.numeric(as.character(nmme_real$lead))

## calculate forecasted month
nmme_real$fcsted_mon = month(nmme_real$fcst_date) + nmme_real$lead
nmme_real$fcsted_mon = ifelse(nmme_real$fcsted_mon > 12, nmme_real$fcsted_mon - 12, 
                              nmme_real$fcsted_mon)

## calc seasonal fcst (3 month avg)
real_3mon = nmme_real[nmme_real$lead <= 3, ]
real_3mon = real_3mon %>% group_by(var, mdl, fcst_date, hru) %>% summarise_all(funs(mean))
real_3mon$lead = 'season'
real_3mon$fcsted_mon = month(real_3mon$fcst_date) + 2.5
real_3mon$fcsted_mon = ifelse(real_3mon$fcsted_mon > 12.5, real_3mon$fcsted_mon - 12, 
                              real_3mon$fcsted_mon)

nmme_real$lead = as.character(nmme_real$lead)
nmme_real = rbind.data.frame(nmme_real, real_3mon)

## merge climatology and real-time forecast
real_df = merge(nmme_real, clim, by = c('var', 'mdl', 'fcsted_mon', 'hru'))

## convert units - mm/d to in/wk & C to F
real_df$value = ifelse(real_df$var == 'prate', real_df$value * 7 / 25.4,
                       real_df$value * 1.8 + 32) 
real_df$clim_val = ifelse(real_df$var == 'prate', real_df$clim_val * 7 / 25.4,
                          real_df$clim_val * 1.8 + 32) 
real_df$anom = real_df$value - real_df$clim_val


### === R shiny format
real_df$fcsted_mon <- real_df$value <- real_df$clim_val <- NULL
real_df = real_df[order(real_df$hru),] # order hru for shiny

## nmme model average
df = real_df %>% group_by(var, hru, fcst_date, lead) %>% dplyr::summarise(anom = mean(anom))
df$mdl = 'nmme'

## recombine dfs
df_final = rbind.data.frame(real_df,df)
df_final = df_final[order(df_final$hru),]
df_final$fcst_date = format(df_final$fcst_date,'%Y-%m')
df_final$fcst_date = as.factor(df_final$fcst_date)

## save fcsts
setwd(dir_out)
saveRDS(df_final, file = 'nmme_realtime_fcsts.rds')

## copy to s2s app
message("copying to web")
system('echo "put /d2/hydrofcst/s2s/Rshiny_input/nmme_realtime_fcsts.rds /d1/www/html/s2s/S2S-app/realtime/" | sftp -i /home/hydrofcst/.ssh/hydrotxfr hydrofcst@hydro-c1-web')
